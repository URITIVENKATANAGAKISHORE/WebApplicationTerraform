trigger: none
pr: none

pool:
  vmImage: windows-latest

stages:
- stage: terraform_init
  displayName: Terraform Init
  jobs:
  - job:
    continueOnError: false
    steps:
    - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
      displayName: Install Terraform
      inputs:
        terraformVersion: 'latest'
    - task: TerraformCLI@0
      displayName: Terraform init
      inputs:
        command: 'init'
        backendType: 'azurerm'
        backendServiceArm: 'TerraformAzureConnection'
        ensureBackend: true
        backendAzureRmResourceGroupName: 'infrastructure-rg'
        backendAzureRmResourceGroupLocation: 'eastus'
        backendAzureRmStorageAccountName: 'infraterraformstorage'
        backendAzureRmStorageAccountSku: 'Standard_LRS'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'dev-tfstate'
        allowTelemetryCollection: false
        commandOptions: '-var-file="/env/dev/dev.tfvars"'

- stage: terraform_validate
  dependsOn: terraform_init
  condition: succeeded('terraform_init')
  displayName: Terraform Validate
  jobs:
  - job:
    steps:
    - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
      displayName: Install Terraform
      inputs:
        terraformVersion: 'latest'
    - task: TerraformCLI@0
      displayName: Terraform validate
      inputs:
        command: 'validate'
        environmentServiceName: 'TerraformAzureConnection'
        allowTelemetryCollection: false

- stage: terraform_plan
  dependsOn: terraform_validate
  condition: succeeded('terraform_validate')
  displayName: Terraform Plan
  jobs:
    - job:
      steps:
      - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
        displayName: Install Terraform
        inputs:
          terraformVersion: 'latest' 
      - task: TerraformCLI@0
        displayName: Terraform init
        inputs:
          command: 'init'
          backendType: 'azurerm'
          backendServiceArm: 'TerraformAzureConnection'
          ensureBackend: true
          backendAzureRmResourceGroupName: 'infrastructure-rg'
          backendAzureRmResourceGroupLocation: 'eastus'
          backendAzureRmStorageAccountName: 'infraterraformstorage'
          backendAzureRmStorageAccountSku: 'Standard_LRS'
          backendAzureRmContainerName: 'tfstate'
          backendAzureRmKey: 'dev-tfstate'
          allowTelemetryCollection: false
          commandOptions: '-var-file="/env/dev/dev.tfvars"'
      - task: TerraformCLI@0
        displayName: Terraform plan
        inputs:
          command: 'plan'
          allowTelemetryCollection: false
          environmentServiceName: 'TerraformAzureConnection'
          commandOptions: '-var-file="/env/dev/dev.tfvars"'
